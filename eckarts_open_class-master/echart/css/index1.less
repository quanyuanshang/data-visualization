* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

li {
    list-style: none;
}

/* 声明字体*/
@font-face {
    font-family: electronicFont;
    src: url(../font/DS-DIGIT.TTF);
}


body {
    background: url(../images/bg.jpg) no-repeat top center;
    line-height: 1.15;

}

header {
    height: 1.25rem;
    background: url(../images/head_bg.png) no-repeat center;
    background-size: 100% 100%;

    h1 {
        font-size: 0.475rem;
        color: #fff;
        text-align: center;
        line-height: 1.25rem;
    }

    .showTime {
        position: absolute;
        top: 0rem;
        right: 0.375rem;
        line-height: 0.9375rem;
        color: rgba(255, 255, 255, 0.7);
        font-size: 0.25rem;
    }


}

.mainbox {
    display: flex;
    min-width: 1024px;
    max-width: 1920px;
    width: 100%;
    margin: 0 auto;
    height: 300px;

    padding: 0.125rem .125rem 0; //上左右下，中间那个值是左右


    .column {
        flex: 3;

        &:nth-child(2) {
            flex: 5;

            margin: 0 .125rem .1875rem;

        }
    }

    .panel {

        .chart {
            height: 3rem;
            //background-color: #02a6b5;
        }

        h2 {
            height: 0.6rem;
            line-height: 0.6rem;
            text-align: center;
            color: #fff;
            font-size: 20px;
            font-weight: 400;
        }

        position: relative;
        //position: relative; 表示该元素采用相对定位。它本身不会移动，但可以通过 top、left、right、bottom 属性相对于原来的位置进行偏移。
        // 同时，设置 relative 后，该元素可以作为其子元素（如绝对定位的伪元素）的定位参考点。
        height: 3.875rem;
        border: 1px solid rgba(25, 186, 139, 0.17);
        background: url(../images/line.png) rgba(255, 255, 255, 0.04);
        padding: 0 .9375rem 0.5rem; //padding是内部的内容和边框的距离
        margin-bottom: .9375rem;

        &::before {

            position: absolute;
            top: 0;
            left: 0;
            width: 10px;
            height: 10px;
            border-top: 2px solid #02a6b5;
            border-left: 2px solid #02a6b5;
            content: "";
        }

        &::after {
            position: absolute;
            top: 0;
            right: 0;
            content: "";
            width: 10px;
            height: 10px;
            border-top: 2px solid #02a6b5;
            border-right: 2px solid #02a6b5;
        }

        .panel-footer {
            position: absolute;
            bottom: 0;
            width: 100%;
            left: 0;

            &::before {

                position: absolute;
                bottom: 0;
                left: 0;
                width: 10px;
                height: 10px;
                border-bottom: 2px solid #02a6b5;
                border-left: 2px solid #02a6b5;
                content: "";
            }

            &::after {
                position: absolute;
                bottom: 0;
                right: 0;
                content: "";
                width: 10px;
                height: 10px;
                border-bottom: 2px solid #02a6b5;
                border-right: 2px solid #02a6b5;
            }

        }

        // 伪元素就是用 ::before 或 ::after 生成的虚拟元素，常用于装饰、加图标、加分隔线等，不会改变原有 HTML 标签内容

    }





    .no {
        background: rgba(101, 132, 226, 0.1);
        padding: 0.1875rem;

        .no-hd {
            position: relative;
            border: 1px solid rgba(25, 186, 139, 0.17);

            &::before {
                position: absolute;
                top: 0;
                left: 0;
                content: "";
                width: 30px;
                height: 10px;
                border-top: 2px solid #02a6b5;
                border-left: 2px solid #02a6b5;
            }

            &::after {
                position: absolute;
                bottom: 0;
                right: 0;
                content: "";
                width: 30px;
                height: 10px;
                border-bottom: 2px solid #02a6b5;
                border-right: 2px solid #02a6b5;
            }

            ul {
                display: flex;

                li {
                    position: relative;
                    flex: 1;
                    line-height: 1rem;
                    font-size: 0.875rem;
                    color: #ffeb7b;
                    text-align: center;
                    font-family: "electronicFont";

                    &:first-child:after {
                        content: '';
                        position: absolute;
                        top: 25%;
                        right: 0;
                        height: 50%;
                        width: 1px;
                        background: rgba(255, 255, 255, 0.4);

                    }
                }

            }
        }

        .no-bd {
            ul {
                display: flex;

                li {
                    flex: 1;
                    text-align: center;
                    color: rgba(255, 255, 255, 0.7);
                    font-size: 0.275rem;
                    line-height: 0.5rem;
                    padding-top: 10px;

                }
            }
        }



    }

    .map {
        height: 10.125rem;
        position: relative;

        .chart {

            position: absolute;
            top: 0;
            left: 0;
            z-index: 5;
            height: 10.125rem;
            width: 100%;
        }

        .map1 {
            width: 6.475rem;
            height: 6.475rem;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: url(../images/map.png) no-repeat center;
            background-size: 100% 100%;
            opacity: 0.3;
        }

        .map2 {
            width: 8rem;
            height: 8rem;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: url(../images/lbx.png) no-repeat center;
            background-size: 100% 100%;
            animation: rotate1 15s linear infinite;
            opacity: 0.6;
        }

        .map3 {
            width: 7rem;
            height: 7rem;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: url(../images/jt.png) no-repeat center;
            background-size: 100% 100%;
            animation: rotate2 10s linear infinite;
            opacity: 0.8;
        }

        @keyframes rotate1 {
            from {
                transform: translate(-50%, -50%) rotate(0deg);

            }

            to {
                transform: translate(-50%, -50%) rotate(360deg);
            }

        }

        .chart {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;

        }

        @keyframes rotate2 {
            from {
                transform: translate(-50%, -50%) rotate(0deg);

            }

            to {
                transform: translate(-50%, -50%) rotate(-360deg);
            }

        }

    }

}